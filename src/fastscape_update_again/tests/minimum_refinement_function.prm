# Listing of Parameters
# ---------------------
# In order to make the problem in the first time step easier to solve, we need
# a reasonable guess for the temperature and pressure. To obtain it, we use an
# adiabatic pressure and temperature field. This parameter describes what the
# `adiabatic' temperature would be at the surface of the domain (i.e. at depth
# zero). Note that this value need not coincide with the boundary condition
# posed at this point. Rather, the boundary condition may differ significantly
# from the adiabatic value, and then typically induce a thermal boundary
# layer.
# For more information, see the section in the manual that discusses the
# general mathematical model.

# MPI: 2

set Adiabatic surface temperature          = 1623
set CFL number                             = 1.0

# The number of space dimensions you want to run this program in.
set Dimension                              = 2

# The end time of the simulation. Units: years if the 'Use years in output
# instead of seconds' parameter is set; seconds otherwise.
set End time                               = 0

set Pressure normalization                 = surface
set Surface pressure                       = 0
set Resume computation                     = false
set Start time                             = 0

set Use years in output instead of seconds = true


subsection Boundary temperature model
  # Select one of the following models:
  #
  # `Tan Gurnis': A model for the Tan/Gurnis benchmark.
  #
  # `spherical constant': A model in which the temperature is chosen constant
  # on the inner and outer boundaries of a spherical shell. Parameters are
  # read from subsection 'Spherical constant'.
  #
  # `box': A model in which the temperature is chosen constant on all the
  # sides of a box.
  set List of model names = initial temperature

  subsection Initial temperature
    # Temperature at the inner boundary (core mantle boundary). Units: K.
    set Maximal temperature = 3773

    # Temperature at the outer boundary (lithosphere water/air). Units: K.
    set Minimal temperature = 273
  end

end


subsection Discretization
  subsection Stabilization parameters

    # The $\beta$ factor in the artificial viscosity stabilization. An
    # appropriate value for 2d is 0.078 and 0.117 for 3d. Units: None.
    set beta  = 0.078

    # The $c_R$ factor in the entropy viscosity stabilization. Units: None.
    set cR    = 0.33
  end

end


subsection Geometry model
  # Select one of the following models:
  #
  # `spherical shell': A geometry representing a spherical shell or a piece of
  # it. Inner and outer radii are read from the parameter file in subsection
  # 'Spherical shell'.
  #
  # `box': A box geometry parallel to the coordinate directions. The extent of
  # the box in each coordinate direction is set in the parameter file. The box
  # geometry labels its 2*dim sides as follows: in 2d, boundary indicators 0
  # through 3 denote the left, right, bottom and top boundaries; in 3d,
  # boundary indicators 0 through 5 indicate left, right, front, back, bottom
  # and top boundaries. See also the documentation of the deal.II class
  # ``GeometryInfo''.
  set Model name = box

  subsection Box
    set X extent  = 500000
    set Y extent  = 500000
  end

end


subsection Gravity model
  set Model name = vertical


  subsection Vertical
    # Magnitude of the gravity vector in $m/s^2$. The direction is always
    # radially outward from the center of the earth.
    set Magnitude = 10.0
  end

end


subsection Initial temperature model
  set Model name = function
  subsection Function
    set Function constants  = l=250000
    set Function expression = if(x < l, 1873, 1623)
    set Variable names      = x,y
  end
end


subsection Material model

  set Model name = simple

end


subsection Mesh refinement

  set Additional refinement times              =

  set Coarsening fraction                      = 0.05
  set Refinement fraction                      = 0.3

  set Initial adaptive refinement              = 3
  set Initial global refinement                = 3

  set Normalize individual refinement criteria = true
  set Refinement criteria merge operation      = max

  set Run postprocessors on initial refinement = true

  set Strategy                                 = temperature, minimum refinement function

  set Time steps between mesh refinement       = 1
  subsection Minimum refinement function
    set Function constants  =

    # This is in fact the default value
    set Coordinate system   = depth

    # The following lines are equal to set the line:
    # set Function expression = 4 + 2*sin(x*pi/250000)
    # which implies:
    # set Variable names    = x,y
    # because that is the default value for Variable names.
    # To illustrate the possibility to rename function variables
    # in your favourite naming scheme we use the following:
    set Variable names      = depth,not_used1
    set Function expression = 4 + 2*sin(depth*pi/250000)

  end
end


# The parameters below this comment were created by the update script
# as replacement for the old 'Model settings' subsection. They can be
# safely merged with any existing subsections with the same name.

subsection Boundary temperature model
  set Fixed temperature boundary indicators   = 0,3
end

subsection Boundary velocity model
  set Tangential velocity boundary indicators = 0,1,2,3
end

subsection Boundary velocity model
  set Zero velocity boundary indicators       =
end


subsection Postprocess

  set List of postprocessors = visualization,velocity statistics, basic statistics, temperature statistics,heat flux statistics, depth average

  subsection Depth average
    # The time interval between each generation of graphical output files. A
    # value of zero indicates that output should be generated in each time
    # step. Units: years if the 'Use years in output instead of seconds'
    # parameter is set; seconds otherwise.
    set Time between graphical output = 0
  end

  subsection Visualization
    set Interpolate output = false

    set List of output variables      =

    # VTU file output supports grouping files from several CPUs into one file
    # using MPI I/O when writing on a parallel filesystem. Select 0 for no
    # grouping. This will disable parallel file output and instead write one
    # file per processor in a background thread. A value of 1 will generate
    # one big file containing the whole solution.
    set Number of grouped files       = 0

    # The file format to be used for graphical output.
    set Output format                 = gnuplot

    # The time interval between each generation of graphical output files. A
    # value of zero indicates that output should be generated in each time
    # step. Units: years if the 'Use years in output instead of seconds'
    # parameter is set; seconds otherwise.
    set Time between graphical output = 0
  end

end
